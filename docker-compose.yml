version: '3.3'

services:
  tps:
    build:
      context: ./src/tps
      dockerfile: ../../services/tps/Dockerfile
    working_dir: /tps
    volumes:
      - ./src/tps:/tps
    ports:
      - ${TPS_PORT}:${TPS_PORT}
    networks:
      - localnet
  nginx:
    build: ./services/nginx
    volumes:
      - ./src/app-for-purchasing-service:/var/www/purchase-tps
      - ./services/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    depends_on:
      - purchase-tps
    networks:
      - localnet
  messenger-async:
    command: php bin/console messenger:consume async -vv
    restart: always
    build:
      context: ./services/messenger-async
      args:
        HOST_UID: ${HOST_UID}
        HOST_GID: ${HOST_GID}
    volumes:
      - ./src/app-for-purchasing-service:/var/www/purchase-tps
      - ./services/purchase-tps/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - postgres
      - redis
      - purchase-tps
    networks:
      - localnet
  purchase-tps:
    build:
      context: ./services/purchase-tps
      args:
        HOST_UID: ${HOST_UID}
        HOST_GID: ${HOST_GID}
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
    volumes:
      - ./src/app-for-purchasing-service:/var/www/purchase-tps
      - ./services/purchase-tps/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - postgres
      - redis
    networks:
      - localnet
  postgres:
    build: ./services/postgres
    ports:
      - 54320:5432
    volumes:
      - ./volumes/database:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    networks:
      - localnet
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - ./volumes/redis:/data
    networks:
      - localnet
  portainer:
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volumes/portainer_data:/data
    networks:
      - localnet

networks:
  localnet:
    driver: bridge
